{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMO,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAUC,IAC9BA,EAAMC,kBAMR,SAAqBC,GACnB,MAAMC,EAAe,GACrB,IAAK,MAAOC,EAAKC,KAAUH,EAASI,UAAW,CAC7CH,EAAaC,GAAOG,OAAOF,GAC3B,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAaM,OAAQD,IACxCrB,EAAcqB,EAAGL,EAAad,OAC3BqB,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoB3B,QAAeC,MAAU,IAGnDc,EAAad,MAAQc,EAAad,MAAQc,EAAaa,I,EApB3DC,CADiB,IAAIC,SAAStB,IAE9BA,EAAKuB,OAAO,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const dataForm = new FormData(form);\n  loopPromise(dataForm);\n  form.reset()\n});\n\nfunction loopPromise(dataForm) {\n  const dataFromForm = {};\n  for (const [key, value] of dataForm.entries()) {\n    dataFromForm[key] = Number(value);\n    for (let i = 1; i <= dataFromForm.amount; i++) {\n      createPromise(i, dataFromForm.delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      dataFromForm.delay = dataFromForm.delay + dataFromForm.step;\n    }\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","dataForm","dataFromForm","key","value","entries","Number","i","amount","then","$parcel$interopDefault","Notify","success","catch","failure","step","$ce04d3a99e08e73b$var$loopPromise","FormData","reset"],"version":3,"file":"03-promises.f37ae717.js.map"}